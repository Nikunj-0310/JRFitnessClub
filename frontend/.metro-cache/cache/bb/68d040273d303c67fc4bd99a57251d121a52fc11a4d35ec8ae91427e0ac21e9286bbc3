{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,_e,d){\"use strict\";Object.defineProperty(_e,'__esModule',{value:!0}),_e.validatePathConfig=function e(t){var s=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],c=Object.assign({path:'string',initialRouteName:'string',screens:'object'},s?null:{alias:'array',exact:'boolean',stringify:'object',parse:'object'});if('object'!=typeof t||null===t)throw new Error(`Expected the configuration to be an object, but got ${JSON.stringify(t)}.`);var f=Object.fromEntries(Object.keys(t).map(function(e){if(!(e in c))return[e,'extraneous'];var n=c[e],o=t[e];if(void 0!==o)if('array'===n){if(!Array.isArray(o))return[e,`expected 'Array', got '${typeof o}'`]}else if(typeof o!==n)return[e,`expected '${n}', got '${typeof o}'`];return null}).filter(Boolean));if(Object.keys(f).length)throw new Error(`Found invalid properties in the configuration:\\n${o(f)}\\n\\nYou can only specify the following properties:\\n${o(c)}\\n\\nIf you want to specify configuration for screens, you need to specify them under a 'screens' property.\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);if(s&&'path'in t&&'string'==typeof t.path&&t.path.includes(':'))throw new Error(`Found invalid path '${t.path}'. The 'path' in the top-level configuration cannot contain patterns for params.`);'screens'in t&&t.screens&&Object.entries(t.screens).forEach(function(t){var o=(0,n.default)(t,2),s=(o[0],o[1]);'string'!=typeof s&&e(s,!1)})};var e,t=r(d[0]),n=(e=t)&&e.__esModule?e:{default:e},o=function(e){return Object.entries(e).map(function(e){var t=(0,n.default)(e,2);return`- ${t[0]} (${t[1]})`}).join('\\n')}});","lineCount":1,"map":[[1,29,1,0],[1,42,1,13,"Object"],[1,49,1,13,"defineProperty"],[1,64,1,13,"_e"],[1,67,1,13],[1,81,1,13,"value"],[1,88,1,13],[1,92,4,0,"_e"],[1,95,4,0,"validatePathConfig"],[1,114,4,7],[1,123,4,16,"validatePathConfig"],[1,125,4,35,"config"],[1,128,4,56],[1,132,4,43,"root"],[1,136,4,47,"arguments"],[1,146,4,47,"length"],[1,153,4,47],[1,161,4,47,"undefined"],[1,165,4,47,"arguments"],[1,175,4,47],[1,180,4,47,"arguments"],[1,190,4,47],[1,193,5,8,"validation"],[1,195,5,18,"Object"],[1,202,5,18,"assign"],[1,209,5,18],[1,210,6,4,"path"],[1,215,6,10],[1,224,7,4,"initialRouteName"],[1,241,7,22],[1,250,8,4,"screens"],[1,258,8,13],[1,268,9,8,"root"],[1,270,9,15],[1,275,9,22],[1,276,10,6,"alias"],[1,282,10,13],[1,290,11,6,"exact"],[1,296,11,13],[1,306,12,6,"stringify"],[1,316,12,17],[1,325,13,6,"parse"],[1,331,13,13],[1,342,16,2],[1,345,16,24],[1,362,16,13,"config"],[1,365,16,47],[1,372,16,36,"config"],[1,374,17,4],[1,380,17,10],[1,384,17,14,"Error"],[1,390,17,20],[1,445,17,75,"JSON"],[1,450,17,80,"stringify"],[1,460,17,90,"config"],[1,467,19,2],[1,471,19,8,"validationErrors"],[1,473,19,27,"Object"],[1,480,19,34,"fromEntries"],[1,492,19,46,"Object"],[1,499,19,53,"keys"],[1,504,19,58,"config"],[1,507,19,66,"map"],[1,511,19,70],[1,520,19,70,"key"],[1,523,20,4],[1,528,20,8,"key"],[1,533,20,15,"validation"],[1,536,34,6],[1,542,34,13],[1,543,34,14,"key"],[1,545,34,19],[1,559,21,6],[1,563,21,12,"type"],[1,565,21,19,"validation"],[1,567,21,30,"key"],[1,570,23,12,"value"],[1,572,23,20,"config"],[1,574,23,27,"key"],[1,577,24,6],[1,585,24,20,"undefined"],[1,589,24,10,"value"],[1,591,25,8],[1,594,25,21],[1,604,25,12,"type"],[1,607,26,10],[1,611,26,15,"Array"],[1,617,26,21,"isArray"],[1,625,26,29,"value"],[1,628,27,12],[1,634,27,19],[1,635,27,20,"key"],[1,637,27,25],[1,670,27,58,"value"],[1,681,29,15],[1,691,29,26,"value"],[1,695,29,36,"type"],[1,697,30,10],[1,703,30,17],[1,704,30,18,"key"],[1,706,30,23],[1,719,30,36,"type"],[1,738,30,58,"value"],[1,744,36,4],[1,751,36,11],[1,755,37,2],[1,758,37,5,"filter"],[1,765,37,12,"Boolean"],[1,775,38,2],[1,778,38,6,"Object"],[1,785,38,13,"keys"],[1,790,38,18,"validationErrors"],[1,793,38,36,"length"],[1,800,39,4],[1,806,39,10],[1,810,39,14,"Error"],[1,816,39,20],[1,867,39,71,"formatToList"],[1,869,39,84,"validationErrors"],[1,926,39,156,"formatToList"],[1,928,39,169,"validation"],[1,1158,41,2],[1,1161,41,6,"root"],[1,1164,41,14],[1,1173,41,24,"config"],[1,1176,41,57],[1,1193,41,41,"config"],[1,1195,41,48,"path"],[1,1201,41,69,"config"],[1,1203,41,76,"path"],[1,1208,41,81,"includes"],[1,1217,41,90],[1,1222,42,4],[1,1228,42,10],[1,1232,42,14,"Error"],[1,1238,42,20],[1,1261,42,43,"config"],[1,1263,42,50,"path"],[1,1351,44,6],[1,1363,44,19,"config"],[1,1366,44,29,"config"],[1,1368,44,36,"screens"],[1,1377,45,4,"Object"],[1,1384,45,11,"entries"],[1,1392,45,19,"config"],[1,1394,45,26,"screens"],[1,1403,45,35,"forEach"],[1,1411,45,43],[1,1420,45,43,"_ref3"],[1,1423,45,59],[1,1427,45,59,"_ref4"],[1,1430,45,59],[1,1432,45,59,"_slicedToArray"],[1,1434,45,59,"default"],[1,1443,45,59,"_ref3"],[1,1445,45,59],[1,1448,45,48,"value"],[1,1451,45,46,"_ref4"],[1,1453,45,46],[1,1456,45,53,"_ref4"],[1,1458,45,53],[1,1462,46,27],[1,1479,46,17,"value"],[1,1482,47,8,"validatePathConfig"],[1,1484,47,27,"value"],[1,1487,47,34],[1,1489,49,4],[1,1491,51,0],[1,1493,51,1],[1,1497,1,13,"e"],[1,1499,51,1,"_babelRuntimeHelpersSlicedToArray"],[1,1501,51,1,"r"],[1,1503,51,1,"d"],[1,1505,51,1],[1,1509,51,1,"_slicedToArray"],[1,1512,1,13,"e"],[1,1514,51,1,"_babelRuntimeHelpersSlicedToArray"],[1,1518,1,13,"e"],[1,1520,1,13,"__esModule"],[1,1531,1,13,"e"],[1,1533,1,13],[1,1534,1,13,"default"],[1,1542,1,13,"e"],[1,1545,3,6,"formatToList"],[1,1547,3,21],[1,1556,3,21,"items"],[1,1559,3,26],[1,1566,3,30,"Object"],[1,1573,3,37,"entries"],[1,1581,3,45,"items"],[1,1584,3,52,"map"],[1,1588,3,56],[1,1597,3,56,"_ref"],[1,1600,3,56],[1,1604,3,56,"_ref2"],[1,1607,3,56],[1,1609,3,56,"_slicedToArray"],[1,1611,3,56,"default"],[1,1620,3,56,"_ref"],[1,1622,3,56],[1,1625,3,68],[1,1631,3,74],[1,1636,3,61,"_ref2"],[1,1638,3,61],[1,1645,3,68,"_ref2"],[1,1647,3,68],[1,1652,3,95],[1,1655,3,97,"join"],[1,1660,3,102],[1,1665,3,107],[1,1666,51,1],[1,1669]],"functionMap":{"names":["<global>","formatToList","Object.entries.map$argument_0","validatePathConfig","Object.keys.map$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;qBCE,mCC,uCD,YD;OGC;sECe;GDkB;2CEQ;KFI;CHE"},"hasCjsExports":false},"type":"js/module"}]}