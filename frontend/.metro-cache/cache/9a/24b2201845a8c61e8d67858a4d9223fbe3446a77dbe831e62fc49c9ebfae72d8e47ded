{"dependencies":[],"output":[{"data":{"code":"__d(function(g,r,i,a,m,_e,d){\"use strict\";function e(e){if(!e)return null;var n=new Error(e.message);return n.key=e.key,n}function n(e){return Array.isArray(e)?0===e.length?null:e:e?[e]:null}Object.defineProperty(_e,'__esModule',{value:!0}),_e.checkValidArgs=function(e,n){if(!Array.isArray(e)||0===e.length||!Array.isArray(e[0]))throw new Error(\"[AsyncStorage] Expected array of key-value pairs as first argument to multiSet\");if(n&&\"function\"!=typeof n){if(Array.isArray(n))throw new Error(\"[AsyncStorage] Expected function as second argument to multiSet. Did you forget to wrap key-value pairs in an array for the first argument?\");throw new Error(\"[AsyncStorage] Expected function as second argument to multiSet\")}},_e.checkValidInput=function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];var o=n[0],s=n[1];\"string\"!=typeof o&&console.warn(`[AsyncStorage] Using ${typeof o} type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\\nKey passed: ${o}\\n`);if(n.length>1&&\"string\"!=typeof s){if(null==s)throw new Error(`[AsyncStorage] Passing null/undefined as value is not supported. If you want to remove value, Use .removeItem method instead.\\nPassed value: ${s}\\nPassed key: ${o}\\n`);console.warn(`[AsyncStorage] The value for key \"${o}\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\\nPassed value: ${s}\\nPassed key: ${o}\\n`)}},_e.convertError=e,_e.convertErrors=function(t){var o=n(t);return o?o.map(function(n){return e(n)}):null}});","lineCount":1,"map":[[1,42,54,7],[1,51,54,16,"convertError"],[1,53,54,29,"error"],[1,56,55,2],[1,60,55,7,"error"],[1,62,56,4],[1,69,56,11],[1,74,59,2],[1,78,59,8,"out"],[1,80,59,14],[1,84,59,18,"Error"],[1,90,59,24,"error"],[1,92,59,30,"message"],[1,101,61,2],[1,108,60,2,"out"],[1,110,60,11],[1,114,60,15,"error"],[1,116,60,21,"key"],[1,120,61,9,"out"],[1,121,62,0],[1,122,71,0],[1,131,71,9,"ensureArray"],[1,133,71,21,"e"],[1,136,72,2],[1,143,72,6,"Array"],[1,149,72,12,"isArray"],[1,157,72,20,"e"],[1,160,73,24],[1,164,73,11,"e"],[1,166,73,13,"length"],[1,173,73,28],[1,178,73,35,"e"],[1,180,74,13,"e"],[1,182,75,11],[1,183,75,12,"e"],[1,186,77,11],[1,190,79,0],[1,191],[1,241,3,0,"_e"],[1,244,3,0,"checkValidArgs"],[1,259,3,7],[1,268,4,2,"keyValuePairs"],[1,270,5,2,"callback"],[1,273,7,2],[1,277,8,5,"Array"],[1,283,8,11,"isArray"],[1,291,8,19,"keyValuePairs"],[1,295,9,29],[1,299,9,4,"keyValuePairs"],[1,301,9,18,"length"],[1,310,10,5,"Array"],[1,316,10,11,"isArray"],[1,324,10,19,"keyValuePairs"],[1,326,10,33],[1,330,12,4],[1,336,12,10],[1,340,12,14,"Error"],[1,346,13,6],[1,428,17,2],[1,431,17,6,"callback"],[1,434,17,38],[1,453,17,25,"callback"],[1,455,17,50],[1,456,18,4],[1,459,18,8,"Array"],[1,465,18,14,"isArray"],[1,473,18,22,"callback"],[1,476,19,6],[1,482,19,12],[1,486,19,16,"Error"],[1,492,20,8],[1,635,24,4],[1,641,24,10],[1,645,24,14,"Error"],[1,651,25,6],[1,717,27,2],[1,718,28,0],[1,720,30,0,"_e"],[1,723,30,0,"checkValidInput"],[1,739,30,7],[1,750,30,53],[1,758,30,53,"_len"],[1,760,30,53,"arguments"],[1,770,30,53,"length"],[1,777,30,35,"input"],[1,779,30,40],[1,783,30,40,"Array"],[1,789,30,40,"_len"],[1,792,30,40,"_key"],[1,794,30,40],[1,796,30,40,"_key"],[1,798,30,40,"_len"],[1,800,30,40,"_key"],[1,804,30,35,"input"],[1,806,30,40,"_key"],[1,809,30,40,"arguments"],[1,819,30,40,"_key"],[1,822,31,2],[1,826,31,9,"key"],[1,828,31,23,"input"],[1,830,31,28],[1,833,31,14,"value"],[1,835,31,23,"input"],[1,837,31,28],[1,840,33,21],[1,857,33,13,"key"],[1,860,35,4,"console"],[1,868,35,12,"warn"],[1,873,36,6],[1,904,36,37,"key"],[1,1018,36,153,"key"],[1,1025,40,2],[1,1028,40,6,"input"],[1,1030,40,12,"length"],[1,1037,40,21],[1,1040,40,43],[1,1057,40,33,"value"],[1,1059,40,53],[1,1060,41,4],[1,1063,41,17],[1,1069,41,8,"value"],[1,1071,42,6],[1,1077,42,12],[1,1081,42,16,"Error"],[1,1087,43,8],[1,1231,43,152,"value"],[1,1249,43,174,"key"],[1,1256,47,6,"console"],[1,1264,47,14,"warn"],[1,1269,48,8],[1,1306,48,45,"key"],[1,1415,48,156,"value"],[1,1433,48,178,"key"],[1,1439,51,2],[1,1440,52,0],[1,1442,54,0,"_e"],[1,1445,54,0,"convertError"],[1,1460,64,0,"_e"],[1,1463,64,0,"convertErrors"],[1,1477,64,7],[1,1486,65,2,"errs"],[1,1489,67,2],[1,1493,67,8,"errors"],[1,1495,67,17,"ensureArray"],[1,1497,67,29,"errs"],[1,1500,68,2],[1,1507,68,9,"errors"],[1,1509,68,18,"errors"],[1,1511,68,25,"map"],[1,1515,68,29],[1,1524,68,30,"e"],[1,1527,68,31],[1,1534,68,36,"convertError"],[1,1536,68,49,"e"],[1,1538,68,51],[1,1541,68,55],[1,1545,69,0],[1,1546,79,1],[1,1549]],"functionMap":{"names":["<global>","checkValidArgs","checkValidInput","convertError","convertErrors","errors.map$argument_0","ensureArray"],"mappings":"AAA;OCE;CDyB;OEE;CFsB;OGE;CHQ;OIE;6BCI,sBD;CJC;AME;CNQ"},"hasCjsExports":false},"type":"js/module"}]}